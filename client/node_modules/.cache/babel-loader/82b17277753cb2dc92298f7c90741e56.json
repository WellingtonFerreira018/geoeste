{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferre\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\CLB02-2020---Portal-Geoeste\\\\client\\\\src\\\\components\\\\Forms\\\\AuthForms\\\\RegisterForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport api from '../../../services/api';\nimport { Form } from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegisterForm = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confpassword, setConfPassword] = useState(\"\");\n\n  const registerUser = async () => {\n    if (password !== confpassword) return alert('Senhas diferentes!');\n\n    try {\n      await api.post('/api/Auth/register', {\n        email,\n        password\n      });\n      window.location.href = '/';\n    } catch (err) {\n      console.log(err.response);\n\n      if (err.response.status === 409) {\n        alert(\"Email ja cadastrado!\");\n      }\n\n      if (err.response.status === 401) {\n        alert(\"Insira uma senha que possua de 6 a 10 caracteres!\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: \"box\",\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        placeholder: \"Novo Email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        placeholder: \"Nova Senha\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confpassword,\n        placeholder: \"Confirme a Senha\",\n        onChange: e => setConfPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => registerUser(),\n        value: \"Cadastrar\",\n        children: \" Cadastrar \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"J\\xE1 possui uma conta?\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          style: {\n            color: 'blue'\n          },\n          children: \" Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterForm, \"+ooxPvtgdhFlJsEGd40KsousZhY=\");\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","api","Form","RegisterForm","email","setEmail","password","setPassword","confpassword","setConfPassword","registerUser","alert","post","window","location","href","err","console","log","response","status","e","target","value","color"],"sources":["C:/Users/ferre/OneDrive/Área de Trabalho/CLB02-2020---Portal-Geoeste/client/src/components/Forms/AuthForms/RegisterForm.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport  api  from '../../../services/api'\r\nimport { Form } from './style';\r\n\r\n\r\nexport const RegisterForm: React.FC = () =>{\r\n\r\n    const[email, setEmail] = useState<string>(\"\");\r\n    const [password, setPassword] = useState<string >(\"\");\r\n    const [confpassword, setConfPassword] = useState<string >(\"\");\r\n\r\n\r\n    const registerUser = async () =>{\r\n        if(password !== confpassword)\r\n            return alert('Senhas diferentes!');\r\n        try{\r\n            await api.post('/api/Auth/register', {email, password});\r\n            window.location.href='/'\r\n        }catch(err: any){\r\n            console.log(err.response)\r\n            if(err.response.status === 409){\r\n                alert(\"Email ja cadastrado!\");\r\n            }\r\n            if(err.response.status === 401){\r\n                alert(\"Insira uma senha que possua de 6 a 10 caracteres!\")\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n                    <Form className=\"box\" method=\"post\">\r\n                        <h3>Cadastrar</h3>\r\n                        <input type=\"text\" value={email} placeholder=\"Novo Email\" onChange={(e) => setEmail(e.target.value)}/>\r\n                        <input type=\"password\" value={password} placeholder=\"Nova Senha\" onChange={(e) => setPassword(e.target.value)}/>\r\n                        <input type=\"password\" value={confpassword} placeholder=\"Confirme a Senha\" onChange={(e) => setConfPassword(e.target.value)}/>\r\n                        <button type=\"button\" onClick={()=>registerUser()} value=\"Cadastrar\"> Cadastrar </button>\r\n                <p>Já possui uma conta?<a href='/login' style={{color:'blue'}}> Entrar</a></p>\r\n                    </Form>\r\n                    <br/>\r\n                    <br/>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAQC,GAAR,MAAkB,uBAAlB;AACA,SAASC,IAAT,QAAqB,SAArB;;AAGA,OAAO,MAAMC,YAAsB,GAAG,MAAK;EAAA;;EAEvC,MAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAS,EAAT,CAAjC;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAU,EAAV,CAAxC;EACA,MAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAU,EAAV,CAAhD;;EAGA,MAAMU,YAAY,GAAG,YAAW;IAC5B,IAAGJ,QAAQ,KAAKE,YAAhB,EACI,OAAOG,KAAK,CAAC,oBAAD,CAAZ;;IACJ,IAAG;MACC,MAAMV,GAAG,CAACW,IAAJ,CAAS,oBAAT,EAA+B;QAACR,KAAD;QAAQE;MAAR,CAA/B,CAAN;MACAO,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;IACH,CAHD,CAGC,OAAMC,GAAN,EAAe;MACZC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAhB;;MACA,IAAGH,GAAG,CAACG,QAAJ,CAAaC,MAAb,KAAwB,GAA3B,EAA+B;QAC3BT,KAAK,CAAC,sBAAD,CAAL;MACH;;MACD,IAAGK,GAAG,CAACG,QAAJ,CAAaC,MAAb,KAAwB,GAA3B,EAA+B;QAC3BT,KAAK,CAAC,mDAAD,CAAL;MACH;IACJ;EACJ,CAfD;;EAiBA,oBACI;IAAA,wBACY,QAAC,IAAD;MAAM,SAAS,EAAC,KAAhB;MAAsB,MAAM,EAAC,MAA7B;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAEP,KAA1B;QAAiC,WAAW,EAAC,YAA7C;QAA0D,QAAQ,EAAGiB,CAAD,IAAOhB,QAAQ,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;MAAnF;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAO,IAAI,EAAC,UAAZ;QAAuB,KAAK,EAAEjB,QAA9B;QAAwC,WAAW,EAAC,YAApD;QAAiE,QAAQ,EAAGe,CAAD,IAAOd,WAAW,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;MAA7F;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAO,IAAI,EAAC,UAAZ;QAAuB,KAAK,EAAEf,YAA9B;QAA4C,WAAW,EAAC,kBAAxD;QAA2E,QAAQ,EAAGa,CAAD,IAAOZ,eAAe,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;MAA3G;QAAA;QAAA;QAAA;MAAA,QAJJ,eAKI;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAE,MAAIb,YAAY,EAA/C;QAAmD,KAAK,EAAC,WAAzD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ,eAMJ;QAAA,mDAAuB;UAAG,IAAI,EAAC,QAAR;UAAiB,KAAK,EAAE;YAACc,KAAK,EAAC;UAAP,CAAxB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAvB;MAAA;QAAA;QAAA;QAAA;MAAA,QANI;IAAA;MAAA;MAAA;MAAA;IAAA,QADZ,eASY;MAAA;MAAA;MAAA;IAAA,QATZ,eAUY;MAAA;MAAA;MAAA;IAAA,QAVZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CAtCM;;GAAMrB,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}