{"ast":null,"code":"var _jsxFileName = \"C:\\\\Frontend - Geoeste\\\\client\\\\src\\\\components\\\\Section\\\\Section.tsx\",\n    _s = $RefreshSig$();\n\nimport { useFetch } from \"../../hooks/useFetching\";\nimport { Ul } from \"../Loading/style\";\nimport { Container } from \"../ContainerZ\";\nimport { Element } from \"../Element/Element\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Section = _ref => {\n  _s();\n\n  let {\n    id: url,\n    isOverGraphic\n  } = _ref;\n  const {\n    data: subs,\n    isFetching\n  } = useFetch('/api/Data/categorias');\n  return /*#__PURE__*/_jsxDEV(Container, {\n    side: 'left',\n    w: '300px',\n    h: '650px',\n    align: 'center',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        \"textAlign\": \"center\"\n      },\n      children: subs === null || subs === void 0 ? void 0 : subs.map(sub => {\n        return /*#__PURE__*/_jsxDEV(Ul, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              \"marginLeft\": \"-15px\"\n            },\n            children: [\"Dados \", sub === null || sub === void 0 ? void 0 : sub.ctg_desc]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), isFetching && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require('../../assets/utils/loading.gif'),\n            alt: \"loading...\",\n            className: \"center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Element, {\n            ctgs: sub,\n            id: url,\n            graphic: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 18\n          }, this)]\n        }, sub === null || sub === void 0 ? void 0 : sub.ctg_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Section, \"PgUDincQwcQ36k072Ezh/HARy+U=\", false, function () {\n  return [useFetch];\n});\n\n_c = Section;\n\nvar _c;\n\n$RefreshReg$(_c, \"Section\");","map":{"version":3,"names":["useFetch","Ul","Container","Element","Section","id","url","isOverGraphic","data","subs","isFetching","map","sub","ctg_desc","require","ctg_id"],"sources":["C:/Frontend - Geoeste/client/src/components/Section/Section.tsx"],"sourcesContent":["import { useFetch } from \"../../hooks/useFetching\";\r\nimport { Ul } from \"../Loading/style\";\r\nimport { Category } from '../../types/types'\r\nimport { Container } from \"../ContainerZ\"\r\nimport {Element} from \"../Element/Element\";\r\n\r\n\r\ntype SectionProps = {\r\n  id: string | undefined;\r\n  isOverGraphic?: boolean;\r\n}\r\n\r\nexport const Section = ({id:url, isOverGraphic}: SectionProps) =>{\r\n  const {data: subs, isFetching} = useFetch<Category[]>('/api/Data/categorias');\r\n    return(\r\n    <Container side={'left'} w={'300px'} h={'650px'} align={'center'}>\r\n      <div style={{\"textAlign\":\"center\"}} >\r\n        {subs?.map((sub)=>{\r\n          return(\r\n            <Ul key={sub?.ctg_id}>\r\n              <h3 style={{\r\n                \"marginLeft\":\"-15px\"\r\n              }}>Dados {sub?.ctg_desc}</h3>\r\n              {isFetching && <img src={require('../../assets/utils/loading.gif')} alt=\"loading...\" className='center'/>}\r\n                {<Element ctgs={sub} id={url} graphic={true}/>}\r\n            </Ul>\r\n            )\r\n        })}\r\n        </div>\r\n    </Container>\r\n  )\r\n\r\n}\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,yBAAzB;AACA,SAASC,EAAT,QAAmB,kBAAnB;AAEA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAAQC,OAAR,QAAsB,oBAAtB;;AAQA,OAAO,MAAMC,OAAO,GAAG,QAA0C;EAAA;;EAAA,IAAzC;IAACC,EAAE,EAACC,GAAJ;IAASC;EAAT,CAAyC;EAC/D,MAAM;IAACC,IAAI,EAAEC,IAAP;IAAaC;EAAb,IAA2BV,QAAQ,CAAa,sBAAb,CAAzC;EACE,oBACA,QAAC,SAAD;IAAW,IAAI,EAAE,MAAjB;IAAyB,CAAC,EAAE,OAA5B;IAAqC,CAAC,EAAE,OAAxC;IAAiD,KAAK,EAAE,QAAxD;IAAA,uBACE;MAAK,KAAK,EAAE;QAAC,aAAY;MAAb,CAAZ;MAAA,UACGS,IADH,aACGA,IADH,uBACGA,IAAI,CAAEE,GAAN,CAAWC,GAAD,IAAO;QAChB,oBACE,QAAC,EAAD;UAAA,wBACE;YAAI,KAAK,EAAE;cACT,cAAa;YADJ,CAAX;YAAA,qBAEUA,GAFV,aAEUA,GAFV,uBAEUA,GAAG,CAAEC,QAFf;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,EAIGH,UAAU,iBAAI;YAAK,GAAG,EAAEI,OAAO,CAAC,gCAAD,CAAjB;YAAqD,GAAG,EAAC,YAAzD;YAAsE,SAAS,EAAC;UAAhF;YAAA;YAAA;YAAA;UAAA,QAJjB,eAKK,QAAC,OAAD;YAAS,IAAI,EAAEF,GAAf;YAAoB,EAAE,EAAEN,GAAxB;YAA6B,OAAO,EAAE;UAAtC;YAAA;YAAA;YAAA;UAAA,QALL;QAAA,GAASM,GAAT,aAASA,GAAT,uBAASA,GAAG,CAAEG,MAAd;UAAA;UAAA;UAAA;QAAA,QADF;MASD,CAVA;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADA;AAkBH,CApBM;;GAAMX,O;UACsBJ,Q;;;KADtBI,O"},"metadata":{},"sourceType":"module"}