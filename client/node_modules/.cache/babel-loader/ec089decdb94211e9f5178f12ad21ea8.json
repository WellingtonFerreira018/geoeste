{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nexport const useDownload = _ref => {\n  _s();\n\n  let {\n    apiDefinition,\n    preDownloading,\n    postDownloading,\n    onError,\n    getFileName\n  } = _ref;\n  const ref = useRef(null);\n  const [url, setFileUrl] = useState();\n  const [name, setFileName] = useState();\n\n  const download = async () => {\n    try {\n      var _ref$current;\n\n      preDownloading();\n      const {\n        data\n      } = await apiDefinition();\n      const url = URL.createObjectURL(new Blob([data]));\n      setFileUrl(url);\n      setFileName(getFileName());\n      (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.click();\n      postDownloading();\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      onError();\n    }\n  };\n\n  return {\n    download,\n    ref,\n    url,\n    name\n  };\n};\n\n_s(useDownload, \"IawGevQcBqwehCb+bjRuAxbtcgg=\");","map":{"version":3,"names":["useRef","useState","useDownload","apiDefinition","preDownloading","postDownloading","onError","getFileName","ref","url","setFileUrl","name","setFileName","download","data","URL","createObjectURL","Blob","current","click","revokeObjectURL","error"],"sources":["C:/Frontend - Geoeste/client/src/hooks/useDownload.ts"],"sourcesContent":["import { AxiosResponse } from \"axios\";\r\nimport { useRef, useState } from \"react\";\r\n\r\ninterface DownloadFileProps {\r\n  readonly apiDefinition: () => Promise<AxiosResponse<Blob>>;\r\n  readonly preDownloading: () => void;\r\n  readonly postDownloading: () => void;\r\n  readonly onError: () => void;\r\n  readonly getFileName: () => string;\r\n}\r\n\r\ninterface DownloadedFileInfo {\r\n  readonly download: () => Promise<void>;\r\n  readonly ref: React.MutableRefObject<HTMLAnchorElement | null>;\r\n  readonly name: string | undefined;\r\n  readonly url: string | undefined;\r\n}\r\n\r\nexport const useDownload = ({\r\n  apiDefinition,\r\n  preDownloading,\r\n  postDownloading,\r\n  onError,\r\n  getFileName,\r\n}: DownloadFileProps): DownloadedFileInfo => {\r\n  const ref = useRef<HTMLAnchorElement | null>(null);\r\n  const [url, setFileUrl] = useState<string>();\r\n  const [name, setFileName] = useState<string>();\r\n\r\n  const download = async () => {\r\n    try {\r\n      preDownloading();\r\n      const { data } = await apiDefinition();\r\n      const url = URL.createObjectURL(new Blob([data]));\r\n      setFileUrl(url);\r\n      setFileName(getFileName());\r\n      ref.current?.click();\r\n      postDownloading();\r\n      URL.revokeObjectURL(url);\r\n    } catch (error) {\r\n      onError();\r\n    }\r\n  };\r\n\r\n  return { download, ref, url, name };\r\n};"],"mappings":";;AACA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AAiBA,OAAO,MAAMC,WAAW,GAAG,QAMkB;EAAA;;EAAA,IANjB;IAC1BC,aAD0B;IAE1BC,cAF0B;IAG1BC,eAH0B;IAI1BC,OAJ0B;IAK1BC;EAL0B,CAMiB;EAC3C,MAAMC,GAAG,GAAGR,MAAM,CAA2B,IAA3B,CAAlB;EACA,MAAM,CAACS,GAAD,EAAMC,UAAN,IAAoBT,QAAQ,EAAlC;EACA,MAAM,CAACU,IAAD,EAAOC,WAAP,IAAsBX,QAAQ,EAApC;;EAEA,MAAMY,QAAQ,GAAG,YAAY;IAC3B,IAAI;MAAA;;MACFT,cAAc;MACd,MAAM;QAAEU;MAAF,IAAW,MAAMX,aAAa,EAApC;MACA,MAAMM,GAAG,GAAGM,GAAG,CAACC,eAAJ,CAAoB,IAAIC,IAAJ,CAAS,CAACH,IAAD,CAAT,CAApB,CAAZ;MACAJ,UAAU,CAACD,GAAD,CAAV;MACAG,WAAW,CAACL,WAAW,EAAZ,CAAX;MACA,gBAAAC,GAAG,CAACU,OAAJ,8DAAaC,KAAb;MACAd,eAAe;MACfU,GAAG,CAACK,eAAJ,CAAoBX,GAApB;IACD,CATD,CASE,OAAOY,KAAP,EAAc;MACdf,OAAO;IACR;EACF,CAbD;;EAeA,OAAO;IAAEO,QAAF;IAAYL,GAAZ;IAAiBC,GAAjB;IAAsBE;EAAtB,CAAP;AACD,CA3BM;;GAAMT,W"},"metadata":{},"sourceType":"module"}