{"ast":null,"code":"var _jsxFileName = \"C:\\\\Frontend - Geoeste\\\\client\\\\src\\\\pages\\\\Mapas.tsx\",\n    _s = $RefreshSig$();\n\nimport { useFetch } from '../hooks/useFetching';\nimport { Ul } from '../components/Loading/style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Mapas = () => {\n  _s();\n\n  const {\n    data: maps,\n    isFetching\n  } = useFetch('api/Data/mapas');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mapas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Ul, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [isFetching && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('../assets/utils/loading.gif'),\n          alt: \"loading...\",\n          className: \"center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 26\n        }, this), maps === null || maps === void 0 ? void 0 : maps.map(repo => {\n          if (repo.map_ctg !== 'Uso') {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/mapas/\" + repo.map_id,\n                children: [\" \", repo.map_desc]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 17\n              }, this)\n            }, repo.map_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/mapas/uso/\" + repo.map_id,\n                children: [\" \", repo.map_desc]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 17\n              }, this)\n            }, repo.map_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Mapas, \"I2NHRKFtk3gSAEiYz5qxRAYzOII=\", false, function () {\n  return [useFetch];\n});\n\n_c = Mapas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mapas\");","map":{"version":3,"names":["useFetch","Ul","Mapas","data","maps","isFetching","require","map","repo","map_ctg","map_id","map_desc"],"sources":["C:/Frontend - Geoeste/client/src/pages/Mapas.tsx"],"sourcesContent":["import { useFetch } from '../hooks/useFetching';\r\nimport { Map } from '../types/types';\r\nimport { Ul } from '../components/Loading/style'\r\n\r\nexport const Mapas = () => {\r\n  const {data: maps, isFetching} = useFetch<Map[]>('api/Data/mapas')\r\n\r\n  return(\r\n    <div>\r\n      <h2>Mapas</h2>\r\n      <Ul>\r\n        <ul>\r\n          {isFetching && <img src={require('../assets/utils/loading.gif')} alt=\"loading...\" className='center'/>}\r\n          {maps?.map(repo =>{\r\n            if(repo.map_ctg !== 'Uso'){\r\n            return(\r\n              <li key={repo.map_id}>\r\n                <a href={\"/mapas/\" + repo.map_id}> {repo.map_desc}</a>\r\n              </li>\r\n            )\r\n          }else{\r\n            return(\r\n              <li key={repo.map_id}>\r\n                <a href={\"/mapas/uso/\" + repo.map_id}> {repo.map_desc}</a>\r\n              </li>\r\n            )\r\n          }\r\n          })}\r\n        </ul>\r\n        </Ul>\r\n      </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,sBAAzB;AAEA,SAASC,EAAT,QAAmB,6BAAnB;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;EAAA;;EACzB,MAAM;IAACC,IAAI,EAAEC,IAAP;IAAaC;EAAb,IAA2BL,QAAQ,CAAQ,gBAAR,CAAzC;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,EAAD;MAAA,uBACE;QAAA,WACGK,UAAU,iBAAI;UAAK,GAAG,EAAEC,OAAO,CAAC,6BAAD,CAAjB;UAAkD,GAAG,EAAC,YAAtD;UAAmE,SAAS,EAAC;QAA7E;UAAA;UAAA;UAAA;QAAA,QADjB,EAEGF,IAFH,aAEGA,IAFH,uBAEGA,IAAI,CAAEG,GAAN,CAAUC,IAAI,IAAG;UAChB,IAAGA,IAAI,CAACC,OAAL,KAAiB,KAApB,EAA0B;YAC1B,oBACE;cAAA,uBACE;gBAAG,IAAI,EAAE,YAAYD,IAAI,CAACE,MAA1B;gBAAA,gBAAoCF,IAAI,CAACG,QAAzC;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADF,GAASH,IAAI,CAACE,MAAd;cAAA;cAAA;cAAA;YAAA,QADF;UAKD,CANC,MAMG;YACH,oBACE;cAAA,uBACE;gBAAG,IAAI,EAAE,gBAAgBF,IAAI,CAACE,MAA9B;gBAAA,gBAAwCF,IAAI,CAACG,QAA7C;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADF,GAASH,IAAI,CAACE,MAAd;cAAA;cAAA;cAAA;YAAA,QADF;UAKD;QACA,CAdA,CAFH;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD,CA5BM;;GAAMR,K;UACsBF,Q;;;KADtBE,K"},"metadata":{},"sourceType":"module"}